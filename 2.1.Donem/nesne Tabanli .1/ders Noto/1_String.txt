			STRING
1.
a = "Hello, World!"
print(a.upper())

output=>	HELLO, WORLD!
------------------------------------------------------------------------------------------------------------
2.
a = "Hello, World!"
print(a.lower())

output=>	hello, world!
------------------------------------------------------------------------------------------------------------
3.		//تمسح الفراغات يلي في البداية
a = " Hello, World! "	
print(a.strip()) 

output=> "Hello, World!"
------------------------------------------------------------------------------------------------------------
4.
a = "Hello, World!"
print(a.replace("H", "J"))

output=>	Jello, World!
------------------------------------------------------------------------------------------------------------
5.		//الطريقة  تقسم السلسلة إلى سلاسل فرعية إذا وجدت مثيلات للفاصل:
a = "Hello, World!"	
print(a.split(",")) 

output=>	['Hello', ' World!']
------------------------------------------------------------------------------------------------------------
6.		//الأحرف الكبيرة الحرف الأول في هذه الجملة
txt = "hello, and welcome to my world."
x = txt.capitalize()
print (x)	

output=>	Hello, and welcome to my world.
------------------------------------------------------------------------------------------------------------
7.		//اجعل سلسلة الأحرف صغيرة:
txt = "Hello, And Welcome To My World!"
x = txt.casefold()
print(x)	

output=>	hello, and welcome to my world!
------------------------------------------------------------------------------------------------------------
8.	//اطبع كلمة "banana" ، بحيث تشغل مساحة 20 حرفًا ، ويتوسطها كلمة 
txt = "banana"
x = txt.center(20)
print(x)	

output=>	       banana
------------------------------------------------------------
	//اكتب الحرف الأول في كل كلمة بأحرف كبيرة:
txt = "Welcome to my world"
x = txt.title()
print(x)

output=>Welcome To My World
------------------------------------------------------------------------------------------------------------
9.		//إرجاع عدد المرات التي تظهر فيها القيمة "تفاحة" في السلسلة:
txt = "I love apples, apple are my favorite fruit"
x = txt.count("apple")
print(x)	

output=>	2
------------------------------------------------------------
txt = "I love apples, apple are my favorite fruit"
x = txt.count("apple", 10, 24)
print(x)

output=>	1
------------------------------------------------------------------------------------------------------------
10.		//ترميز UTF-8 السلسلة:
txt = "My name is Ståle"
x = txt.encode()
print(x)	

output=> b'My name is St\xc3\xe5le'
------------------------------------------------------------------------------------------------------------
11.		//تحقق مما إذا كانت السلسلة تنتهي بعبارة "my world".:
txt = "Hello, welcome to my world."
x = txt.endswith("my world.")
print(x)	

output=> True
------------------------------------------------------------
txt = "Hello, welcome to my world."
x = txt.endswith("my world.", 5, 11)
print(x)

output=> False
------------------------------------------------------------------------------------------------------------
12.		//ضبط حجم علامة التبويب على مسافتين أبيضتين:
txt = "H\te\tl\tl\to"
x =  txt.expandtabs(2)
print(x)	

output=> H e l l o
------------------------------------------------------------
txt = "H\te\tl\tl\to"
print(txt)
print(txt.expandtabs())
print(txt.expandtabs(2))
print(txt.expandtabs(4))
print(txt.expandtabs(10))
​
output=>
H       e       l       l       o
H       e       l       l       o
H e l l o
H   e   l   l   o
H         e         l         l         o
------------------------------------------------------------------------------------------------------------
13.	//أين كلمة "welcome" في النص ؟:
txt = "Hello, welcome to my world."
x = txt.find("welcome")	or	x = txt.index("welcome")	
print(x)

output=>	7
------------------------------------------------------------------------------------------------------------
14.   //أدخل السعر داخل العنصر النائب ، يجب أن يكون السعر بتنسيق نقطتين عشريتين ثابتتين:
txt = "For only {price:.2f} dollars!"
print(txt.format(price = 49))

output=>	For only 49.00 dollars!
------------------------------------------------------------
#named indexes:
txt1 = "My name is {fname}, I'm {age}".format(fname = "John", age = 36)
#numbered indexes:
txt2 = "My name is {0}, I'm {1}".format("John",36)
#empty placeholders:
txt3 = "My name is {}, I'm {}".format("John",36)
print(txt1)
print(txt2)
print(txt3)
	output=>
	My name is John, I'm 36
	My name is John, I'm 36
	My name is John, I'm 36
------------------------------------------------------------------------------------------------------------
15.	//تحقق مما إذا كانت جميع الأحرف في النص أبجدية رقمية:
txt = "Company 12"
x = txt.isalnum()
print(x)

output=>False
------------------------------------------------------------
txt = "Company12"
x = txt.isalnum()
print(x)

output=> True
------------------------------------------------------------------------------------------------------------
16.	//تحقق مما إذا كانت جميع الأحرف في النص أحرفًا:
txt = "CompanyX"
x = txt.isalpha()
print(x)

output=> True
------------------------------------------------------------------------------------------------------------
17.	//تحقق مما إذا كانت جميع الأحرف في النص هي أحرف أسكي''Char'':
txt = "Company123"
x = txt.isascii()
print(x)

output=> True
------------------------------------------------------------------------------------------------------------
18.	//تحقق مما إذا كانت جميع الأحرف في كائن unicode هي أرقام عشرية:
txt = "\u0033" #unicode for 3
x = txt.isdecimal()
print(x)

output=> True
------------------------------------------------------------------------------------------------------------
20.	//تحقق مما إذا كانت جميع الأحرف في النص هي أرقام:
txt = "50800"
x = txt.isdigit()
print(x)

output=> True
------------------------------------------------------------------------------------------------------------
21.	//تحقق مما إذا كانت السلسلة معرّفًا صالحًا:
a = "MyFolder"
b = "Demo002"
c = "2bring"
d = "my demo"
print(a.isidentifier())	output=>   True
print(b.isidentifier())		True
print(c.isidentifier())		False
print(d.isidentifier())		False
------------------------------------------------------------------------------------------------------------
22.	//تحقق مما إذا كانت جميع الأحرف في النص صغيرة:
a = "Hello world!"
b = "hello 123"
c = "mynameisPeter"
print(a.islower())	output=>   False
print(b.islower())		True
print(c.islower())		False
------------------------------------------------------------------------------------------------------------
23.	//تحقق مما إذا كانت جميع الأحرف في النص رقمية:
a = "\u0030" #unicode for 0
b = "\u00B2" #unicode for ²
c = "10km2"
d = "-1"
e = "1.5"
print(a.isnumeric())	output=> 	True
print(b.isnumeric())		True
print(c.isnumeric())		False
print(d.isnumeric())		False
print(e.isnumeric())		False
------------------------------------------------------------------------------------------------------------
24.	//تحقق مما إذا كانت جميع الأحرف في النص قابلة للطباعة:
txt = "Hello!\nAre you #1?"
x = txt.isprintable()
print(x)

output=>	False
------------------------------------------------------------------------------------------------------------
25. 	//تحقق مما إذا كانت جميع الأحرف في النص مسافات بيضاء:
txt = "   s   "
x = txt.isspace()
print(x)

output=>False
------------------------------------------------------------------------------------------------------------
26.	//تحقق مما إذا كانت كل كلمة تبدأ بحرف كبير:
txt = "Hello, And Welcome To My World!"
x = txt.istitle()
print(x)

output=> True
------------------------------------------------------------------------------------------------------------
27.	//تحقق مما إذا كانت جميع الأحرف في النص كبيرة:
txt = "THIS IS NOW!"
x = txt.isupper()
print(x)

output=> True
------------------------------------------------------------------------------------------------------------
28.	//عرض نسخة مبررة بطول 20 حرفًا لليسار لكلمة "banana"
txt = "banana"
x = txt.ljust(20)
print(x, "is my favorite fruit.")

output=>	banana              is my favorite fruit.
------------------------------------------------------------
txt = "banana"
x = txt.ljust(20, "O")
print(x)

output=>bananaOOOOOOOOOOOOOO
------------------------------------------------------------------------------------------------------------
29.	//السلسلة الصغيرة:
txt = "Hello my FRIENDS"
x = txt.lower()
print(x)

output=> hello my friends
------------------------------------------------------------------------------------------------------------
30.	//أزل المسافات على يسار السلسلة:
txt = "     banana     "
x = txt.lstrip()
print("of all fruits", x, "is my favorite")

output=> of all fruits banana     is my favorite
------------------------------------------------------------
txt = ",,,,,ssaaww.....banana"
x = txt.lstrip(",.asw")
print(x)

output=> banana
------------------------------------------------------------
	//أزل أي مسافات بيضاء في نهاية السلسلة:
txt = "     banana     "
x = txt.rstrip()
print("of all fruits", x, "is my favorite")

output=> of all fruits     banana is my favorite
------------------------------------------------------------
txt = "banana,,,,,ssqqqww....."		//left
x = txt.rstrip(",.qsw")
print(x)

output=> banana
------------------------------------------------------------
txt = "     banana     "
x = txt.strip()
print("of all fruits", x, "is my favorite")

output=> of all fruits banana is my favorite
------------------------------------------------------------
txt = ",,,,,rrttgg.....banana....rrr"
x = txt.strip(",.grt")
print(x)

output=>banana
------------------------------------------------------------------------------------------------------------
31.	//أنشئ جدول تعيين ، واستخدمه في طريقة translate () لاستبدال أي أحرف "S" بحرف "P":
txt = "Hello Sam!"
mytable = txt.maketrans("S", "P")
print(txt.translate(mytable))

output=> Hello Pam!
------------------------------------------------------------
txt = "Hi Sam!"
x = "mSa"
y = "eJo"
mytable = txt.maketrans(x, y)
print(txt.translate(mytable))

output=> Hi Joe!
------------------------------------------------------------
txt = "Good night Sam!"
x = "mSa"
y = "eJo"
z = "odnght"
mytable = txt.maketrans(x, y, z)
print(txt.translate(mytable))

output=>	G i Joe!
------------------------------------------------------------------------------------------------------------
32.	//ابحث عن كلمة "bananas" ، وقم بإرجاع مجموعة مكونة من ثلاثة عناصر:
	//	1 - كل شيء قبل "المباراة"	
	//	2 - "المباراة"
	//	3 - كل شيء بعد "المباراة"
txt = "I could eat bananas all day"
x = txt.partition("bananas")		or 		x = txt.rpartition("bananas")
print(x)				    rpartition----تقسيم

output=> ('I could eat ', 'bananas', ' all day')
------------------------------------------------------------------------------------------------------------
33.	//يستعاض عن كلمة "bananas":		
txt = "I like bananas"
x = txt.replace("bananas", "apples")
print(x)				//	replace-----يحل محل

output=>I like apples		
------------------------------------------------------------
txt = "one one was a race horse, two two was one too."
x = txt.replace("one", "three")
print(x)

output=> three three was a race horse, two two was three too."
------------------------------------------------------------------------------------------------------------
34.	//ين يوجد في النص آخر تكرار للسلسلة "casa" ؟:
txt = "Mi casa, su casa."
x = txt.rfind("casa")		or		x = txt.rindex("casa")
print(x)

output=> 12		index---فهرس
------------------------------------------------------------
txt = "Hello, welcome to my world."
x = txt.rindex("e", 5, 10)
print(x)

output=> 8
------------------------------------------------------------------------------------------------------------
35.	//ستعمل طريقة rjust () على محاذاة السلسلة بشكل صحيح ، باستخدام حرف محدد (المسافة الافتراضية) كحرف تعبئة.
txt = "banana"
x = txt.rjust(20, "O")
print(x)

output=>OOOOOOOOOOOOOObanana
------------------------------------------------------------
txt = "banana"

x = txt.rjust(20)

print(x, "is my favorite fruit.")

output=>			banana is my favorite fruit.
------------------------------------------------------------------------------------------------------------
36.		//قسّم سلسلة إلى قائمة ، باستخدام الفاصلة ، متبوعة بمسافة (،) كفاصل:
txt = "apple, banana, cherry"
x = txt.rsplit(", ")
print(x)

output=> ['apple', 'banana', 'cherry']
------------------------------------------------------------
txt = "apple, banana, cherry"	
	# setting the maxsplit parameter to 1, will return a list with 2 elements!
x = txt.rsplit(", ", 1)
print(x)

output=> ['apple, banana', 'cherry']
------------------------------------------------------------
	# s هنا قمنا بتعريف متغير نصي إسمه

s = 'split method is very useful.'      

	# على أساس المسافة الفارغة s لتجزئة النص الموجود في المتغير  split() هنا قمنا باستدعاء الدالة
	# arr و هكذا سيتم وضع كل كلمة في النص في عنصر في المصفوفة
arr = s.split(' ')              
	# لاحظ أن كل عنصر يحتوي على كلمة واحدة .arr هنا قمنا بطباعة النص الذي تم تقسيمه على 5 عناصر في المصفوفة
print(arr[0])
print(arr[1])
print(arr[2])
print(arr[3])
print(arr[4])

------------------------------------------------------------------------------------------------------------
37.	//قسّم سلسلة إلى قائمة حيث تكون كل كلمة عنصر قائمة:
txt = "welcome to the jungle"
x = txt.split()
print(x)

output=> ['welcome', 'to', 'the', 'jungle']
------------------------------------------------------------
xt = "hello, my name is Peter, I am 26 years old"
x = txt.split(", ")
print(x)

output=> ['hello', 'my name is Peter', 'I am 26 years old']
------------------------------------------------------------
txt = "Thank you for the music\nWelcome to the jungle"
x = txt.splitlines()
print(x)

output=> ['Thank you for the music', 'Welcome to the jungle']
------------------------------------------------------------------------------------------------------------
38.	//تحقق مما إذا كانت السلسلة تبدأ بـ "Hello":
txt = "Hello, welcome to my world."
x = txt.startswith("Hello")
print(x)

output=> True
------------------------------------------------------------
txt = "Hello, welcome to my world."
x = txt.startswith("wel", 7, 20)
print(x)

output=>True
------------------------------------------------------------------------------------------------------------
39.	//اجعل الأحرف الصغيرة كبيرة والحروف الكبيرة صغيرة:
txt = "Hello My Name Is PETER"
x = txt.swapcase()
print(x)

output=>hELLO mY nAME iS peter
------------------------------------------------------------------------------------------------------------
40.	//استبدل أي حرف "S" بحرف "P":
mydict = {83:  80}
txt = "Hello Sam!"
print(txt.translate(mydict))

output=>Hello Pam!
------------------------------------------------------------------------------------------------------------
41.	//السلسلة الكبيرة:
txt = "Hello my friends"
x = txt.upper()
print(x)

output=> HELLO MY FRIENDS
------------------------------------------------------------------------------------------------------------
42.	//املأ السلسلة بالأصفار حتى يصل طولها إلى 10 أحرف:
txt = "50"
x = txt.zfill(10)
print(x)

output=>0000000050
------------------------------------------------------------
a = "hello"
b = "welcome to the jungle"
c = "10.000"

print(a.zfill(10))
print(b.zfill(10))
print(c.zfill(10))

output=>	00000hello
	welcome to the jungle
	000010.000
------------------------------------------------------------------------------------------------------------

output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------

output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------

output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------

output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------

output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------

output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------

output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------

output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------
output=>
------------------------------------------------------------------------------------------------------------
















